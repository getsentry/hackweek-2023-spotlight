name: Publish

on:
  push:
    branches:
      - main
    paths:
      - '**/CHANGELOG.md'

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    # For whatever reason, yaml does not like the full "meta(changelog): Update package versions" string
    # So we check this in two parts
    if: |
      contains(github.event.head_commit.message, 'meta(changelog)') 
      && contains(github.event.head_commit.message, 'Update package versions')
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: Setup pnpm & install dependencies
        uses: pnpm/action-setup@v2
        with:
          run_install: true

      - name: Publish to NPM
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          publish: pnpm changeset:publish
          createGithubReleases: true

  electron:
    name: Electron Build
    needs: publish
    runs-on: macos-latest

    # strategy:
    #   fail-fast: false
    #   matrix:
    #     platform: [x64, arm64]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Install deps
        run: pnpm install

      - name: Build packages
        run: pnpm build

      - name: Build Electron
        env:
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
          TEAMID: ${{ secrets.TEAMID }}
          CERT_PASS: ${{ secrets.CERT_PASS }}
          MAIN_VITE_SENTRY_ORG: ${{ secrets.MAIN_VITE_SENTRY_ORG }}
          MAIN_VITE_SENTRY_PROJECT: ${{ secrets.MAIN_VITE_SENTRY_PROJECT }}
          MAIN_VITE_SENTRY_AUTH_TOKEN: ${{ secrets.MAIN_VITE_SENTRY_AUTH_TOKEN }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: cd packages/electron && pnpm build:mac

      - name: Gets latest created release info
        id: latest_release_info
        uses: gregziegan/fetch-latest-release@v2.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: packages/electron/dist/*.zip
          tag: ${{ steps.latest_release_info.outputs.tag_name }}
          file_glob: true
          make_latest: false
